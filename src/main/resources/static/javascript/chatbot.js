const form = document.getElementById("chat-form");
const messagesDiv = document.getElementById("message");
const typingIndicator = document.querySelector(".typing-indicator");

// FAQ database

const faqDatabase = {
"Features of AgriConnect / AgriConnect ‡§ï‡•Ä ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç": `
         <strong>AgriConnect is your ultimate agricultural companion, designed to revolutionize farming with cutting-edge technology! üöú</strong><br><br>
         <strong>üå± Crop Recommendations:</strong> Our advanced AI analyzes multiple critical parameters to suggest the <strong>PERFECT</strong> crop for your land:
         <ul>
             <li>Soil Nutrients: Nitrogen (N), Phosphorus (P), Potassium (K)</li>
             <li>Environmental Factors: Temperature, Humidity, Rainfall</li>
             <li>Precise Location-Based Insights</li>
             <li>Soil pH Analysis</li>
         </ul>
         <strong>üí∞ Crop Price Prediction:</strong> Maximize Your Earnings! Instantly discover the most profitable selling strategies:
         <ul>
             <li>Real-time market price tracking</li>
             <li>State and district-specific pricing</li>
             <li>Minimum and maximum price suggestions</li>
             <li>Live market updates to optimize your sales</li>
         </ul>
         <strong>üìä Historical Data Tracking:</strong> Smart Farming, Smarter Decisions
         <ul>
             <li>Store and analyze past predictions</li>
             <li>Comprehensive agricultural performance insights</li>
             <li>Data-driven planning for future seasons</li>
         </ul>
         <strong>Transform your farming experience with AgriConnect - Where Technology Meets Agriculture! üåç</strong>
     `,

     "How to Use AgriConnect / AgriConnect ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç": `
         Getting started is as easy as 1-2-3!
         <ol>
             <li>Quick Registration
                 <ul>
                     <li>Create your FREE account in minutes</li>
                     <li>Secure, user-friendly interface</li>
                     <li>No technical skills required!</li>
                 </ul>
             </li>
             <li>Explore Powerful Features
                 <ul>
                     <li>Navigate intuitive dashboard</li>
                     <li>Select 'Crop Recommendation' or 'Price Prediction'</li>
                     <li>Input your farm's unique details</li>
                 </ul>
             </li>
             <li>Receive Instant Insights
                 <ul>
                     <li>Get personalized agricultural recommendations</li>
                     <li>Review data-driven suggestions</li>
                     <li>Make informed farming decisions</li>
                 </ul>
             </li>
         </ol>
         <em>Pro Tip: Use historical tracking to continuously improve your strategy! üí°</em>
     `,

     "How AgriConnect Helps / AgriConnect ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à": `
         We're not just an app, we're your agricultural partner!
         <strong>üí∏ Boost Your Profitability</strong>
         <ul>
             <li>Increase crop yields by 30%</li>
             <li>Optimize resource allocation</li>
             <li>Reduce farming uncertainties</li>
         </ul>
         <strong>üîç Precision Agriculture</strong>
         <ul>
             <li>Data-driven crop selection</li>
             <li>Real-time market insights</li>
             <li>Personalized farming strategies</li>
         </ul>
         <strong>üåç Empowering Rural Innovation</strong>
         <ul>
             <li>Supporting small and marginal farmers</li>
             <li>Bridging technology and traditional farming</li>
             <li>Creating sustainable agricultural ecosystems</li>
         </ul>`,
     "English/‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡§º‡•Ä": "You have selected English. Now you can ask me anything in English.",
     "Hindi/‡§π‡§ø‡§Ç‡§¶‡•Ä": "‡§Ü‡§™‡§®‡•á ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§ö‡•Å‡§®‡•Ä ‡§π‡•à‡•§ ‡§Ö‡§¨ ‡§Ü‡§™ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§õ ‡§≠‡•Ä ‡§™‡•Ç‡§õ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
     "Bengali/‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ": "‡¶Ü‡¶™‡¶®‡¶ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§ ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶Ø‡¶º ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡¶æ‡¶∏‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®‡•§",
     "Telugu/‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å": "‡∞Æ‡±Ä‡∞∞‡±Å ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞é‡∞Ç‡∞ö‡±Å‡∞ï‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡±Å. ‡∞á‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞®‡∞æ‡∞§‡±ã ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å‡∞≤‡±ã ‡∞è‡∞¶‡±à‡∞®‡∞æ ‡∞Ö‡∞°‡∞ó‡∞µ‡∞ö‡±ç‡∞ö‡±Å.",
     "Marathi/‡§Æ‡§∞‡§æ‡§†‡•Ä": "‡§§‡•Å‡§Æ‡•ç‡§π‡•Ä ‡§Æ‡§∞‡§æ‡§†‡•Ä ‡§®‡§ø‡§µ‡§°‡§≤‡•á ‡§Ü‡§π‡•á. ‡§Ü‡§§‡§æ ‡§§‡•Å‡§Æ‡•ç‡§π‡•Ä ‡§Æ‡§æ‡§ù‡•ç‡§Ø‡§æ‡§ï‡§°‡•á ‡§Æ‡§∞‡§æ‡§†‡•Ä‡§§ ‡§ï‡§æ‡§π‡•Ä‡§π‡•Ä ‡§µ‡§ø‡§ö‡§æ‡§∞‡•Ç ‡§∂‡§ï‡§§‡§æ.",
     "Tamil/‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç": "‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç ‡Æ§‡Øá‡Æ∞‡Øç‡Æ®‡Øç‡Æ§‡ØÜ‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç. ‡Æá‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ ‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æé‡Æ©‡Øç‡Æ©‡Æø‡Æü‡ÆÆ‡Øç ‡Æ§‡ÆÆ‡Æø‡Æ¥‡Æø‡Æ≤‡Øç ‡Æé‡Æ§‡Øà‡ÆØ‡ØÅ‡ÆÆ‡Øç ‡Æï‡Øá‡Æü‡Øç‡Æï‡Æ≤‡Ææ‡ÆÆ‡Øç.",
     "Gujarati/‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä": "‡™§‡™Æ‡´á ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä ‡™™‡™∏‡™Ç‡™¶ ‡™ï‡™∞‡´ç‡™Ø‡´Å‡™Ç ‡™õ‡´á. ‡™π‡™µ‡´á ‡™§‡™Æ‡´á ‡™Æ‡™®‡´á ‡™ó‡´Å‡™ú‡™∞‡™æ‡™§‡´Ä ‡™Æ‡™æ‡™Ç ‡™ï‡™Ç‡™à‡™™‡™£ ‡™™‡´Å‡™õ‡´ã ‡™∂‡™ï‡´ã ‡™õ‡´ã.",
     "Kannada/‡≤ï‡≤®‡≥ç‡≤®‡≤°": "‡≤®‡≥Ä‡≤µ‡≥Å ‡≤ï‡≤®‡≥ç‡≤®‡≤°‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤Ø‡≥ç‡≤ï‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø. ‡≤à‡≤ó ‡≤®‡≥Ä‡≤µ‡≥Å ‡≤®‡≤®‡≤ó‡≥Ü ‡≤ï‡≤®‡≥ç‡≤®‡≤°‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤è‡≤®‡≥Å ‡≤¨‡≥á‡≤ï‡≤æ‡≤¶‡≤∞‡≥Ç ‡≤ï‡≥á‡≤≥‡≤¨‡≤π‡≥Å‡≤¶‡≥Å.",
     "Malayalam/‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç": "‡¥®‡µÄ ‡¥§‡¥æ‡¥®‡µÅ‡¥Ç ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç ‡¥§‡¥ø‡¥∞‡¥û‡µç‡¥û‡µÜ‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥Ç. ‡¥á‡¥™‡µç‡¥™‡µã‡µæ ‡¥®‡µÄ ‡¥é‡¥®‡µç‡¥®‡µÜ ‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥é‡¥®‡µç‡¥§‡µÅ‡¥Ç ‡¥ö‡µã‡¥¶‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥Ç.",
     "Punjabi/‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä": "‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ‡®ö‡©Å‡®£‡®ø‡®Ü ‡®π‡©à‡•§ ‡®π‡©Å‡®£ ‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®Æ‡©à‡®®‡©Ç‡©∞ ‡®™‡©∞‡®ú‡®æ‡®¨‡©Ä ‡®µ‡®ø‡©±‡®ö ‡®ï‡©Å‡®ù ‡®µ‡©Ä ‡®™‡©Å‡©±‡®õ ‡®∏‡®ï‡®¶‡©á ‡®π‡©ã‡•§",
     "Odia/‡¨ì‡¨°‡¨º‡¨ø‡¨Ü": "‡¨Ü‡¨™‡¨£ ‡¨ì‡¨°‡¨º‡¨ø‡¨Ü ‡¨ö‡≠ü‡¨® ‡¨ï‡¨∞‡¨ø‡¨õ‡¨®‡≠ç‡¨§‡¨ø‡•§ ‡¨è‡¨¨‡≠á ‡¨Ü‡¨™‡¨£ ‡¨Æ‡¨§‡≠á ‡¨ì‡¨°‡¨º‡¨ø‡¨Ü‡¨∞‡≠á ‡¨ï‡¨ø‡¨õ‡¨ø‡¨™‡¨ø ‡¨™‡¨ö‡¨æ‡¨∞‡¨ø ‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á‡•§",
     "Assamese/‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ": "‡¶Ü‡¶™‡ßÅ‡¶®‡¶ø ‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ ‡¶¨‡¶æ‡¶ö‡¶®‡¶ø ‡¶ï‡ß∞‡¶ø‡¶õ‡ßá‡•§ ‡¶è‡¶§‡¶ø‡¶Ø‡¶º‡¶æ ‡¶Ü‡¶™‡ßÅ‡¶®‡¶ø ‡¶Æ‡ßã‡¶ï ‡¶Ö‡¶∏‡¶Æ‡ßÄ‡¶Ø‡¶º‡¶æ‡¶§ ‡¶Ø‡¶ø‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡¶•‡¶æ ‡¶∏‡ßÅ‡¶ß‡¶ø‡¶¨ ‡¶™‡¶æ‡ß∞‡ßá‡•§"
  };


// Handle FAQ chip clicks
document.querySelectorAll(".faq-chip").forEach((chip) => {
    chip.addEventListener("click", () => {
        const topic = chip.textContent;
        if (faqDatabase[topic]) {
            displayMessage(topic, "user");
            showTypingIndicator();
            setTimeout(() => {
                displayMessage1(faqDatabase[topic], "bot");
                hideTypingIndicator();
            }, 1000);
        }
    });
});

// Language selection handler remains the same
document.getElementById("Language-select").addEventListener("change", (event) => {
    const selectedLanguage = event.target.options[event.target.selectedIndex].text.trim();
    if (faqDatabase[selectedLanguage]) {
        displayMessage(selectedLanguage, "user");
        showTypingIndicator();
        setTimeout(() => {
            hideTypingIndicator();
            displayMessage(faqDatabase[selectedLanguage], "bot");
        }, 1000);
    }
});

function showTypingIndicator() {
    typingIndicator.style.display = "flex";
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

function hideTypingIndicator() {
    typingIndicator.style.display = "none";
}

// Updated form submission with API key fetching
form.addEventListener("submit", async (event) => {
    event.preventDefault();

    const userInput = document.getElementById("user-message").value;
    displayMessage(userInput, "user");
    document.getElementById("user-message").value = "";

    showTypingIndicator();

    try {
        // Get API key from your backend
        const apiKeyResponse = await fetch("/api/get-api-key");
        const apiKey = await apiKeyResponse.text();

        // Make request to OpenRouter with required headers
        const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${apiKey}`,
                "HTTP-Referer": window.location.origin,
                "X-Title": "AgriConnect"
            },
            body: JSON.stringify({
                model: "openai/gpt-3.5-turbo",
                messages: [
                    {
                        role: "system",
                        content: "You are an agricultural expert assistant. Provide helpful advice about farming, crops, and agricultural practices.",
                    },
                    { role: "user", content: userInput }
                ]
            })
        });

        const data = await response.json();
        hideTypingIndicator();

        if (data.choices && data.choices[0].message) {
            displayMessage(data.choices[0].message.content, "bot");
        } else {
            displayMessage("Error: No response from the bot.", "bot");
        }
    } catch (error) {
        console.error("Error:", error);
        hideTypingIndicator();
        displayMessage("Error: Unable to connect to the API.", "bot");
    }
});

function displayMessage1(message, sender) {
    const messageDiv = document.createElement("div");
    messageDiv.classList.add("message", sender);
    messageDiv.innerHTML = message; // For formatted content
    messagesDiv.appendChild(messageDiv);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}

function displayMessage(message, sender) {
    const messageDiv = document.createElement("div");
    messageDiv.classList.add("message", sender);
    messageDiv.textContent = message; // For plain text
    messagesDiv.appendChild(messageDiv);
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
}
