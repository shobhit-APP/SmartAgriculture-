    class AgriConnectChatbot {
        constructor() {
            this.form = document.getElementById("chat-form");
            this.messagesDiv = document.getElementById("messages");
            this.typingIndicator = document.querySelector(".typing-indicator");
            this.userInput = document.getElementById("user-message");
            this.languageSelect = document.getElementById("language-select");
            this.sendBtn = document.querySelector(".send-btn");
            this.statusIndicator = document.getElementById("status-indicator");

            this.isProcessing = false;
            this.currentLanguage = 'en';

            this.initializeEventListeners();
            this.initializeFAQButtons();
        }

        initializeEventListeners() {
            if (this.form) {
                this.form.addEventListener("submit", (e) => this.handleUserSubmit(e));
            }

            if (this.languageSelect) {
                this.languageSelect.addEventListener("change", () => this.handleLanguageChange());
            }

            if (this.userInput) {
                this.userInput.addEventListener("keydown", (e) => {
                    if (e.key === "Enter" && !e.shiftKey) {
                        e.preventDefault();
                        if (!this.isProcessing) {
                            this.handleUserSubmit(e);
                        }
                    }
                });

                this.userInput.addEventListener("input", () => {
                    this.sendBtn.disabled = this.userInput.value.trim().length === 0;
                });
            }
        }

        initializeFAQButtons() {
            const faqButtons = [
                { id: "features-btn", key: "features" },
                { id: "how-to-use-btn", key: "how-to-use" },
                { id: "how-it-helps-btn", key: "how-it-helps" }
            ];

            faqButtons.forEach(({ id, key }) => {
                const btn = document.getElementById(id);
                if (btn) {
                    btn.addEventListener("click", () => this.handleFAQClick(key));
                }
            });
        }

        async handleUserSubmit(event) {
            event.preventDefault();

            const userMessage = this.userInput.value.trim();
            if (!userMessage || this.isProcessing) return;

            this.isProcessing = true;
            this.sendBtn.disabled = true;

            this.displayMessage(userMessage, "user");
            this.userInput.value = "";
            this.showTypingIndicator();

            try {
                const response = await this.fetchBotResponse(userMessage);
                this.hideTypingIndicator();
                this.displayMessage(response, "bot", true);
            } catch (error) {
                console.error("Chat Error:", error);
                this.hideTypingIndicator();

                const fallbackResponse = this.generateFallbackResponse(userMessage);
                this.displayMessage(fallbackResponse, "bot");

                this.showStatusMessage("Connection issue - using offline mode", "error");
            } finally {
                this.isProcessing = false;
                this.sendBtn.disabled = false;
            }
        }

        async fetchBotResponse(userMessage) {
            const contextPrompt = this.buildContextPrompt(userMessage);

            try {
                const apiKeyResponse = await fetch("/api/get-api-key", {
                    method: "GET",
                    headers: {
                        "Content-Type": "application/json"
                    }
                });

                if (!apiKeyResponse.ok) {
                    throw new Error("Failed to retrieve API key");
                }

                const apiKey = await apiKeyResponse.text();

                const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        contents: [{
                            parts: [{ text: contextPrompt }]
                        }],
                        generationConfig: {
                            temperature: 0.7,
                            topK: 40,
                            topP: 0.95,
                            maxOutputTokens: 1000
                        },
                        safetySettings: [
                            {
                                category: "HARM_CATEGORY_HARASSMENT",
                                threshold: "BLOCK_MEDIUM_AND_ABOVE"
                            }
                        ]
                    })
                });

                if (!response.ok) {
                    throw new Error(`Gemini API error: ${response.status} - ${response.statusText}`);
                }

                const data = await response.json();

                if (data.candidates && data.candidates[0]?.content?.parts?.[0]?.text) {
                    return this.formatBotResponse(data.candidates[0].content.parts[0].text);
                } else {
                    throw new Error("Invalid response structure from Gemini API");
                }
            } catch (error) {
                console.error("API call failed:", error);
                throw error;
            }
        }

        buildContextPrompt(userMessage) {
            const languageName = this.getLanguageName(this.currentLanguage);

            return `You are AgriConnect, an expert agricultural AI assistant focused exclusively on farming and agriculture.

            IMPORTANT GUIDELINES:
            - Respond only to agriculture-related queries (farming, crops, soil, irrigation, weather, livestock, market prices, etc.)
            - If asked non-agricultural questions, politely redirect to agricultural topics
            - Provide practical, actionable advice for farmers
            - Respond in ${languageName}
            - Keep responses concise but informative (max 200 words)
            - Use simple, farmer-friendly language
            - Include relevant emojis where appropriate

            User Question: ${userMessage}

            Please provide a helpful agricultural response in ${languageName}.`;
        }

        getLanguageName(code) {
            const languages = {
                'en': 'English',
                'hi': 'Hindi'
            };
            return languages[code] || 'English';
        }

        formatBotResponse(text) {
            return text
                .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                .replace(/\*(.*?)\*/g, '<em>$1</em>')
                .replace(/\n\n/g, '<br><br>')
                .replace(/\n/g, '<br>')
                .replace(/(\d+\.\s)/g, '<br>$1')
                .replace(/‚Ä¢/g, '<br>‚Ä¢ ');
        }

        generateFallbackResponse(userMessage) {
            const lowerMessage = userMessage.toLowerCase();

            const agricultureKeywords = {
                'crop': this.currentLanguage === 'hi' ?
                    '‡§´‡§∏‡§≤ ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§Æ‡•à‡§Ç ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡•Ä ‡§ú‡§æ‡§Ç‡§ö, ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§ï‡§ø‡§∏‡•ç‡§Æ‡•ã‡§Ç ‡§ï‡§æ ‡§ö‡§Ø‡§®, ‡§î‡§∞ ‡§â‡§ö‡§ø‡§§ ‡§∞‡•ã‡§™‡§£ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§ ‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§´‡§∏‡§≤ ‡§Æ‡•á‡§Ç ‡§∞‡•Å‡§ö‡§ø ‡§∞‡§ñ‡§§‡•á ‡§π‡•à‡§Ç? üåæ' :
                    'For crop-related queries, I recommend checking soil health, selecting appropriate varieties, and following proper planting schedules. Which specific crop are you interested in? üåæ',
                'soil': this.currentLanguage === 'hi' ?
                    '‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•Ä ‡§∏‡§´‡§≤‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§π‡•à‡•§ pH ‡§∏‡•ç‡§§‡§∞, ‡§™‡•ã‡§∑‡§ï ‡§§‡§§‡•ç‡§µ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä (NPK), ‡§î‡§∞ ‡§ú‡•à‡§µ‡§ø‡§ï ‡§™‡§¶‡§æ‡§∞‡•ç‡§• ‡§ï‡•Ä ‡§ú‡§æ‡§Ç‡§ö ‡§ï‡§∞‡§µ‡§æ‡§è‡§Ç‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•ã ‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§ö‡§æ‡§π‡§ø‡§è? üå±' :
                    'Soil health is crucial for farming success. Consider testing pH levels, nutrient content (NPK), and organic matter. Would you like specific soil management tips? üå±',
                'water': this.currentLanguage === 'hi' ?
                    '‡§ú‡§≤ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡•É‡§∑‡§ø ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à‡•§ ‡§°‡•ç‡§∞‡§ø‡§™ ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à, ‡§µ‡§∞‡•ç‡§∑‡§æ ‡§ú‡§≤ ‡§∏‡§Ç‡§ö‡§Ø‡§®, ‡§î‡§∞ ‡§â‡§ö‡§ø‡§§ ‡§ú‡§≤ ‡§®‡§ø‡§ï‡§æ‡§∏‡•Ä ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§§‡§ï‡§®‡•Ä‡§ï‡•á‡§Ç ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™‡§ï‡•Ä ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§µ‡§ø‡§ß‡§ø ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à? üíß' :
                    'Water management is essential for agriculture. Drip irrigation, rainwater harvesting, and proper drainage are key techniques. What\'s your current irrigation method? üíß',
                'fertilizer': this.currentLanguage === 'hi' ?
                    '‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§î‡§∞ ‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç‡•§ ‡§ï‡§Ç‡§™‡•ã‡§∏‡•ç‡§ü ‡§î‡§∞ ‡§µ‡§∞‡•ç‡§Æ‡•Ä‡§ï‡§Ç‡§™‡•ã‡§∏‡•ç‡§ü ‡§ú‡•à‡§∏‡•á ‡§ú‡•à‡§µ‡§ø‡§ï ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™ ‡§ü‡§ø‡§ï‡§æ‡§ä ‡§π‡•à‡§Ç‡•§ ‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§ö‡§æ‡§π‡§ø‡§è? üåø' :
                    'Choose fertilizers based on soil tests and crop requirements. Organic options like compost and vermicompost are sustainable choices. Need specific fertilizer recommendations? üåø',
                'pest': this.currentLanguage === 'hi' ?
                    '‡§è‡§ï‡•Ä‡§ï‡•É‡§§ ‡§ï‡•Ä‡§ü ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® (IPM) ‡§ú‡•à‡§µ‡§ø‡§ï, ‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§î‡§∞ ‡§∞‡§æ‡§∏‡§æ‡§Ø‡§®‡§ø‡§ï ‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§Æ‡§ø‡§≤‡§æ‡§§‡§æ ‡§π‡•à‡•§ ‡§∞‡•ã‡§ï‡§•‡§æ‡§Æ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§á‡§≤‡§æ‡§ú ‡§∏‡•á ‡§¨‡•á‡§π‡§§‡§∞ ‡§π‡•à‡•§ ‡§Ü‡§™ ‡§ï‡§ø‡§® ‡§ï‡•Ä‡§ü ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡§æ ‡§∏‡§æ‡§Æ‡§®‡§æ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç? üêõ' :
                    'Integrated Pest Management (IPM) combines biological, cultural, and chemical methods. Prevention is always better than cure. What pest issues are you facing? üêõ',
                'weather': this.currentLanguage === 'hi' ?
                    '‡§Æ‡•å‡§∏‡§Æ ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§∞‡•ã‡§™‡§£ ‡§®‡§ø‡§∞‡•ç‡§£‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§´‡§∏‡§≤ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§ ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§Æ‡•å‡§∏‡§Æ ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§®‡•Å‡§Æ‡§æ‡§® ‡§î‡§∞ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§≤‡§æ‡§π ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§Æ‡•å‡§∏‡§Æ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•á ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§ö‡§æ‡§π‡§ø‡§è? üå§Ô∏è' :
                    'Weather monitoring helps with planting decisions and crop protection. Use local weather forecasts and agricultural advisories. Need weather-based farming tips? üå§Ô∏è'
            };

            for (const [keyword, response] of Object.entries(agricultureKeywords)) {
                if (lowerMessage.includes(keyword)) {
                    return response;
                }
            }

            return this.currentLanguage === 'hi' ?
                '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ AgriConnect ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Ç, ‡§ï‡•É‡§∑‡§ø ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§® ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û‡•§ ‡§Æ‡•à‡§Ç ‡§´‡§∏‡§≤‡•ã‡§Ç, ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä, ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à, ‡§ï‡•Ä‡§ü ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§î‡§∞ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§ñ‡•á‡§§‡•Ä ‡§∏‡•á ‡§∏‡§Ç‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§™‡•Ç‡§õ‡•á‡§Ç! üöú' :
                'Hello! I\'m your AgriConnect assistant, specialized in agricultural guidance. I can help with crops, soil, irrigation, pest management, and market information. Please ask me any farming-related question! üöú';
        }

        handleFAQClick(faqKey) {
            const faqResponses = {
                'en': {
                    "features": {
                        question: "What are the key features of AgriConnect?",
                        answer: `<strong>üåü AgriConnect Features</strong><br><br>
                        <strong>üå± Smart Crop Recommendations:</strong><br>
                        ‚Ä¢ AI-powered crop selection based on soil data<br>
                        ‚Ä¢ Climate and location-specific suggestions<br>
                        ‚Ä¢ NPK and pH analysis integration<br><br>

                        <strong>üí∞ Market Price Intelligence:</strong><br>
                        ‚Ä¢ Real-time crop prices by state/district<br>
                        ‚Ä¢ Price trend analysis and predictions<br>
                        ‚Ä¢ Best selling time recommendations<br><br>

                        <strong>üìä Agricultural Insights:</strong><br>
                        ‚Ä¢ Historical farming data tracking<br>
                        ‚Ä¢ Weather-based farming advisories<br>
                        ‚Ä¢ Personalized farming strategies`
                    },
                    "how-to-use": {
                        question: "How do I use AgriConnect effectively?",
                        answer: `<strong>üì± Getting Started with AgriConnect</strong><br><br>
                        <strong>Step 1: Registration</strong><br>
                        ‚Ä¢ Create your free farmer profile<br>
                        ‚Ä¢ Add your farm location and details<br><br>

                        <strong>Step 2: Input Farm Data</strong><br>
                        ‚Ä¢ Enter soil test results (NPK, pH)<br>
                        ‚Ä¢ Specify your land area and type<br><br>

                        <strong>Step 3: Get Recommendations</strong><br>
                        ‚Ä¢ Receive crop suggestions<br>
                        ‚Ä¢ Check market prices<br>
                        ‚Ä¢ Follow farming calendar<br><br>

                        <em>üí° Pro Tip: Regular data updates improve recommendation accuracy!</em>`
                    },
                    "how-it-helps": {
                        question: "How does AgriConnect help farmers?",
                        answer: `<strong>üéØ How AgriConnect Transforms Farming</strong><br><br>
                        <strong>üí∏ Increase Profitability</strong><br>
                        ‚Ä¢ 20-30% higher crop yields<br>
                        ‚Ä¢ Better market price timing<br>
                        ‚Ä¢ Reduced input costs<br><br>

                        <strong>üî¨ Scientific Farming</strong><br>
                        ‚Ä¢ Data-driven decisions<br>
                        ‚Ä¢ Precision agriculture techniques<br>
                        ‚Ä¢ Risk reduction strategies<br><br>

                        <strong>üåç Sustainable Agriculture</strong><br>
                        ‚Ä¢ Eco-friendly farming practices<br>
                        ‚Ä¢ Resource optimization<br>
                        ‚Ä¢ Long-term soil health improvement<br><br>

                        <em>Join thousands of successful farmers using AgriConnect! üöú</em>`
                    }
                },
                'hi': {
                    "features": {
                        question: "AgriConnect ‡§ï‡•Ä ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?",
                        answer: `<strong>üåü AgriConnect ‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç</strong><br><br>
                        <strong>üå± ‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§´‡§∏‡§≤ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç:</strong><br>
                        ‚Ä¢ ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§°‡•á‡§ü‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ AI-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§´‡§∏‡§≤ ‡§ö‡§Ø‡§®<br>
                        ‚Ä¢ ‡§ú‡§≤‡§µ‡§æ‡§Ø‡•Å ‡§î‡§∞ ‡§∏‡•ç‡§•‡§æ‡§®-‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§∏‡•Å‡§ù‡§æ‡§µ<br>
                        ‚Ä¢ NPK ‡§î‡§∞ pH ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§è‡§ï‡•Ä‡§ï‡§∞‡§£<br><br>

                        <strong>üí∞ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§§‡•ç‡§§‡§æ:</strong><br>
                        ‚Ä¢ ‡§∞‡§æ‡§ú‡•ç‡§Ø/‡§ú‡§ø‡§≤‡•á ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§´‡§∏‡§≤ ‡§ï‡•Ä‡§Æ‡§§‡•á‡§Ç<br>
                        ‚Ä¢ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§™‡•ç‡§∞‡§µ‡•É‡§§‡•ç‡§§‡§ø ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§î‡§∞ ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡§ø‡§Ø‡§æ‡§Ç<br>
                        ‚Ä¢ ‡§∏‡§∞‡•ç‡§µ‡•ã‡§§‡•ç‡§§‡§Æ ‡§¨‡§ø‡§ï‡•ç‡§∞‡•Ä ‡§∏‡§Æ‡§Ø ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç<br><br>

                        <strong>üìä ‡§ï‡•É‡§∑‡§ø ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø:</strong><br>
                        ‚Ä¢ ‡§ê‡§§‡§ø‡§π‡§æ‡§∏‡§ø‡§ï ‡§ñ‡•á‡§§‡•Ä ‡§°‡•á‡§ü‡§æ ‡§ü‡•ç‡§∞‡•à‡§ï‡§ø‡§Ç‡§ó<br>
                        ‚Ä¢ ‡§Æ‡•å‡§∏‡§Æ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡•É‡§∑‡§ø ‡§∏‡§≤‡§æ‡§π<br>
                        ‚Ä¢ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ï‡•É‡§∑‡§ø ‡§∞‡§£‡§®‡•Ä‡§§‡§ø‡§Ø‡§æ‡§Ç`
                    },
                    "how-to-use": {
                        question: "‡§Æ‡•à‡§Ç AgriConnect ‡§ï‡§æ ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ‡•Ä ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•Ç‡§Ç?",
                        answer: `<strong>üì± AgriConnect ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§</strong><br><br>
                        <strong>‡§ö‡§∞‡§£ 1: ‡§™‡§Ç‡§ú‡•Ä‡§ï‡§∞‡§£</strong><br>
                        ‚Ä¢ ‡§Ö‡§™‡§®‡§æ ‡§Æ‡•Å‡§´‡•ç‡§§ ‡§ï‡§ø‡§∏‡§æ‡§® ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤ ‡§¨‡§®‡§æ‡§è‡§Ç<br>
                        ‚Ä¢ ‡§Ö‡§™‡§®‡•á ‡§ñ‡•á‡§§ ‡§ï‡•Ä ‡§∏‡•ç‡§•‡§æ‡§® ‡§î‡§∞ ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç<br><br>

                        <strong>‡§ö‡§∞‡§£ 2: ‡§ñ‡•á‡§§ ‡§°‡•á‡§ü‡§æ ‡§á‡§®‡§™‡•Å‡§ü ‡§ï‡§∞‡•á‡§Ç</strong><br>
                        ‚Ä¢ ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç (NPK, pH)<br>
                        ‚Ä¢ ‡§Ö‡§™‡§®‡•á ‡§≠‡•Ç‡§Æ‡§ø ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§î‡§∞ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§®‡§ø‡§∞‡•ç‡§¶‡§ø‡§∑‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç<br><br>

                        <strong>‡§ö‡§∞‡§£ 3: ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç</strong><br>
                        ‚Ä¢ ‡§´‡§∏‡§≤ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç<br>
                        ‚Ä¢ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§ï‡•Ä‡§Æ‡§§‡•á‡§Ç ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç<br>
                        ‚Ä¢ ‡§ï‡•É‡§∑‡§ø ‡§ï‡•à‡§≤‡•á‡§Ç‡§°‡§∞ ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç<br><br>

                        <em>üí° ‡§∏‡•Å‡§ù‡§æ‡§µ: ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§°‡•á‡§ü‡§æ ‡§Ö‡§™‡§°‡•á‡§ü ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä ‡§∏‡§ü‡•Ä‡§ï‡§§‡§æ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à!</em>`
                    },
                    "how-it-helps": {
                        question: "AgriConnect ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à?",
                        answer: `<strong>üéØ AgriConnect ‡§ï‡•à‡§∏‡•á ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•ã ‡§¨‡§¶‡§≤‡§§‡§æ ‡§π‡•à</strong><br><br>
                        <strong>üí∏ ‡§≤‡§æ‡§≠‡§™‡•ç‡§∞‡§¶‡§§‡§æ ‡§¨‡§¢‡§º‡§æ‡§è‡§Ç</strong><br>
                        ‚Ä¢ 20-30% ‡§Ö‡§ß‡§ø‡§ï ‡§´‡§∏‡§≤ ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§®<br>
                        ‚Ä¢ ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§∏‡§Æ‡§Ø<br>
                        ‚Ä¢ ‡§ï‡§Æ ‡§á‡§®‡§™‡•Å‡§ü ‡§≤‡§æ‡§ó‡§§<br><br>

                        <strong>üî¨ ‡§µ‡•à‡§ú‡•ç‡§û‡§æ‡§®‡§ø‡§ï ‡§ñ‡•á‡§§‡•Ä</strong><br>
                        ‚Ä¢ ‡§°‡•á‡§ü‡§æ-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§£‡§Ø<br>
                        ‚Ä¢ ‡§∏‡§ü‡•Ä‡§ï ‡§ï‡•É‡§∑‡§ø ‡§§‡§ï‡§®‡•Ä‡§ï‡•á‡§Ç<br>
                        ‚Ä¢ ‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∞‡§£‡§®‡•Ä‡§§‡§ø‡§Ø‡§æ‡§Ç<br><br>

                        <strong>üåç ‡§ü‡§ø‡§ï‡§æ‡§ä ‡§ï‡•É‡§∑‡§ø</strong><br>
                        ‚Ä¢ ‡§™‡§∞‡•ç‡§Ø‡§æ‡§µ‡§∞‡§£-‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤ ‡§ï‡•É‡§∑‡§ø ‡§™‡•ç‡§∞‡§•‡§æ‡§è‡§Ç<br>
                        ‚Ä¢ ‡§∏‡§Ç‡§∏‡§æ‡§ß‡§® ‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡§®<br>
                        ‚Ä¢ ‡§¶‡•Ä‡§∞‡•ç‡§ò‡§ï‡§æ‡§≤‡§ø‡§ï ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•Å‡§ß‡§æ‡§∞<br><br>

                        <em>AgriConnect ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§π‡§ú‡§æ‡§∞‡•ã‡§Ç ‡§∏‡§´‡§≤ ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á‡§Ç! üöú</em>`
                    }
                }
            };

            const currentLangData = faqResponses[this.currentLanguage];
            const faq = currentLangData[faqKey];

            if (faq) {
                this.displayMessage(faq.question, "user");
                this.showTypingIndicator();

                setTimeout(() => {
                    this.hideTypingIndicator();
                    this.displayMessage(faq.answer, "bot", true);
                }, 1500);
            }
        }

        handleLanguageChange() {
            this.currentLanguage = this.languageSelect.value;

            const responses = {
                'en': `Language changed to English. How can I assist with your farming needs today?`,
                'hi': `‡§≠‡§æ‡§∑‡§æ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤ ‡§ó‡§à ‡§π‡•à‡•§ ‡§Ü‡§ú ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•É‡§∑‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?`
            };

            const languageNames = {
                'en': 'English',
                'hi': '‡§π‡§ø‡§Ç‡§¶‡•Ä'
            };

            const message = responses[this.currentLanguage] || responses['en'];
            const langDisplay = languageNames[this.currentLanguage] || 'English';

            // Update placeholder text
            const placeholderTexts = {
                'en': 'Ask me anything about agriculture...',
                'hi': '‡§ï‡•É‡§∑‡§ø ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§ï‡•Å‡§õ ‡§≠‡•Ä ‡§™‡•Ç‡§õ‡•á‡§Ç...'
            };
            this.userInput.placeholder = placeholderTexts[this.currentLanguage];

            // Update FAQ button texts
            const faqTexts = {
                'en': {
                    'features-btn': 'Features',
                    'how-to-use-btn': 'How to Use',
                    'how-it-helps-btn': 'How It Helps'
                },
                'hi': {
                    'features-btn': '‡§µ‡§ø‡§∂‡•á‡§∑‡§§‡§æ‡§è‡§Ç',
                    'how-to-use-btn': '‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç',
                    'how-it-helps-btn': '‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à'
                }
            };

            Object.entries(faqTexts[this.currentLanguage]).forEach(([btnId, text]) => {
                const btn = document.getElementById(btnId);
                if (btn) {
                    const icon = btn.querySelector('i');
                    btn.innerHTML = `${icon ? icon.outerHTML + ' ' : ''}${text}`;
                }
            });

            // Update welcome message
            const welcomeMessages = {
                'en': `<strong>üå± Welcome to AgriConnect!</strong><br>
                       I'm your intelligent agricultural assistant, ready to help with crop recommendations, soil analysis, weather insights, market prices, and farming techniques. How can I assist you today?`,
                'hi': `<strong>üå± AgriConnect ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à!</strong><br>
                       ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§® ‡§ï‡•É‡§∑‡§ø ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Ç, ‡§´‡§∏‡§≤ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•ã‡§Ç, ‡§Æ‡§ø‡§ü‡•ç‡§ü‡•Ä ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£, ‡§Æ‡•å‡§∏‡§Æ ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø, ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§ï‡•Ä‡§Æ‡§§‡•ã‡§Ç ‡§î‡§∞ ‡§ï‡•É‡§∑‡§ø ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•Ç‡§Ç‡•§ ‡§Ü‡§ú ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?`
            };

            // Update the first bot message
            const firstBotMessage = this.messagesDiv.querySelector('.message.bot');
            if (firstBotMessage) {
                firstBotMessage.innerHTML = welcomeMessages[this.currentLanguage];
            }

            this.displayMessage(`Language: ${langDisplay}`, "user");
            this.showTypingIndicator();

            setTimeout(() => {
                this.hideTypingIndicator();
                this.displayMessage(message, "bot");
            }, 800);
        }

        displayMessage(message, sender, isHTML = false) {
            const messageDiv = document.createElement("div");
            messageDiv.classList.add("message", sender);

            if (isHTML) {
                messageDiv.innerHTML = this.sanitizeHTML(message);
            } else {
                messageDiv.textContent = message;
            }

            const typingIndicator = this.messagesDiv.querySelector('.typing-indicator');
            this.messagesDiv.insertBefore(messageDiv, typingIndicator);

            this.scrollToBottom();
        }

        sanitizeHTML(html) {
            const temp = document.createElement('div');
            temp.innerHTML = html;

            const dangerousElements = temp.querySelectorAll('script, object, embed, link, meta, style');
            dangerousElements.forEach(el => el.remove());

            const allElements = temp.querySelectorAll('*');
            allElements.forEach(el => {
                Array.from(el.attributes).forEach(attr => {
                    if (attr.name.startsWith('on') ||
                        (attr.name === 'href' && attr.value.toLowerCase().includes('javascript:'))) {
                        el.removeAttribute(attr.name);
                    }
                });
            });

            return temp.innerHTML;
        }

        showTypingIndicator() {
            this.typingIndicator.style.display = "flex";
            this.scrollToBottom();
        }

        hideTypingIndicator() {
            this.typingIndicator.style.display = "none";
        }

        showStatusMessage(message, type = "info") {
            this.statusIndicator.textContent = message;
            this.statusIndicator.style.display = "block";
            this.statusIndicator.style.background = type === "error" ?
                "rgba(244, 67, 54, 0.9)" : "rgba(76, 175, 80, 0.9)";

            setTimeout(() => {
                this.statusIndicator.style.display = "none";
            }, 3000);
        }

        scrollToBottom() {
            setTimeout(() => {
                this.messagesDiv.scrollTop = this.messagesDiv.scrollHeight;
            }, 100);
        }
    }

    // Initialize the chatbot when DOM is loaded
    document.addEventListener('DOMContentLoaded', () => {
        new AgriConnectChatbot();
    });

    // Handle page visibility for better performance
    document.addEventListener('visibilitychange', () => {
        if (document.hidden) {
            console.log('Page hidden - optimizing performance');
        } else {
            console.log('Page visible - resuming normal operation');
        }
    });
